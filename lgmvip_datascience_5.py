# -*- coding: utf-8 -*-
"""LGMVIP-DataScience-5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-wF39_dkqtKDX8LxHyd_6X0nC2OxtJxg

NAME : PREETHI PONNUSAMY

[Dataset Link](https://https://drive.google.com/file/d/1luTU7xBvI7QAGPbQMxEHcgKUi9d6UeP_/view)
"""

#unzipping the dataset

!unzip LGMVIP-DataScience-2.zip -d LGMVIP-DataScience-2

import pandas as pd
import numpy as np
import warnings
import matplotlib.pyplot as plt
import seaborn as sns

warnings.filterwarnings('ignore')

df = pd.read_csv('/content/LGMVIP-DataScience-2/globalterrorismdb_0718dist.csv', encoding='ISO-8859-1')
df.head()

df.tail()

df.shape

df.columns

"""Let's select only the important and relevant attributes"""

df = df.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','region_txt':'Region',
                             'provstate':'State','city':'City','attacktype1_txt':'Attack_type','targtype1_txt':'Target_type',
                             'targsubtype1_txt':'Target_subtype','gname':'Gang_name','weaptype1_txt':'Weapon_type','nkill':'Kill','nwound':'Wound','success':'Success'})

df=df[['Year','Month','Day','Country','Region','State','City','Attack_type','Target_type','Target_subtype','Gang_name','Weapon_type','Kill','Wound','Success']]

null = df.isnull().sum()

null_list = null[null>0]
null_list

df['Kill'] = df['Kill'].fillna(0).round(0).astype(int)
df['Wound'] = df['Wound'].fillna(0).round(0).astype(int)

df.head()

df.shape

df.describe()

df['Target_subtype'] = df['Target_subtype'].fillna('others')

df['State'] = df['State'].fillna('Unknown')
df['City'] = df['City'].fillna('Unknown')

df.replace( {"Vehicle (not to include vehicle-borne explosives, i.e., car or truck bombs)": "Vehicle"},inplace = True)

df.isnull().sum()

cols = df.columns
cols

for i in cols:
  print(i,df[i].nunique())

df['Month'].unique()

df.shape

df[df['Month'] == 0].shape[0]

df = df[df['Month']!=0]
df.shape

lst = df['Day'].unique()
lst.sort()
lst

df[df['Day'] == 0].shape[0]

df = df[df['Day'] != 0]
df.shape

print('Total number of killed persons in one terrorism act :',df['Kill'].sum())
print('Total number of wounded persons in one terrorism act :',df['Wound'].sum())

highly_killed = df['Kill'].value_counts().nlargest(5)
highly_wounded = df['Wound'].value_counts().nlargest(5)
print('Top 5 Highly killed in one terrorism act :',highly_killed)
print()
print('Top 5 Highly wounded in one terrorism act :',highly_wounded)

sns.pairplot(df,hue='Attack_type')

df['Region'].unique()

df['Attack_type'].nunique()

df['Attack_type'].unique()

df['Target_type'].nunique()

df['Target_type'].unique()

df['Year'].unique()

top_10_countries = df['Country'].value_counts().reset_index().iloc[:10]

!unzip ne_110m_admin_0_countries.zip -d ne_110m_admin_0_countries

import geopandas as gpd
import matplotlib.pyplot as plt

# Load the world shapefile
world = gpd.read_file("/content/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shx")

print(world.columns)


# Merge world map with our data
world = world.merge(df, how='left', left_on='ADMIN', right_on='Country')

print(world['Region'].isnull().sum())

# Plotting the map
fig, ax = plt.subplots(1, 1, figsize=(15, 10))
world.boundary.plot(ax=ax)
world.plot(column='Region', ax=ax, legend=True)
plt.title('World Map with Regions')
plt.show()

top_10_countries = df['Country'].value_counts().reset_index().iloc[:10]
top_10_countries

plt.figure(figsize=(10, 6))
sns.set(style = 'darkgrid')
sns.barplot(x='Country', y='count', data=top_10_countries)

# Adding title and labels
plt.title('Top 10 Countries in Terrorism')

plt.xticks(rotation=90)

plt.xlabel('Country')
plt.ylabel('Count')

# Show the plot
plt.show()

grouped_data = df.groupby('Country')[['Kill', 'Wound']].sum().reset_index()
grouped_data['total_casualties'] = grouped_data['Kill'] + grouped_data['Wound']
grouped_data = grouped_data.sort_values(by='total_casualties', ascending=False)

top_10_countries = grouped_data.head(10)

plt.figure(figsize=(14,7))
sns.barplot(x='Country', y='total_casualties', data=top_10_countries, palette='coolwarm')

plt.xticks(rotation=90)
plt.title('Top 10 Countries with Total Casualties (Killed + Wounded)')
plt.xlabel('Country')
plt.ylabel('Total Casualties')

plt.show()

grouped_data = df.groupby('Country')['Kill'].sum().reset_index()

grouped_data = grouped_data.sort_values(by='Kill', ascending=False)

top_10_countries = grouped_data.head(10)

plt.figure(figsize=(14,7))
sns.barplot(x='Country', y='Kill', data=top_10_countries, palette='Blues_d')

plt.xticks(rotation=90)
plt.title('Top 10 Countries with Total Killed')
plt.xlabel('Country')
plt.ylabel('Total Killed')
plt.show()

grouped_data = df.groupby('Country')['Wound'].sum().reset_index()
grouped_data = grouped_data.sort_values(by='Wound', ascending=False)

top_10_countries = grouped_data.head(10)

plt.figure(figsize=(14,7))
sns.barplot(x='Country', y='Wound', data=top_10_countries, palette='Set2')

plt.xticks(rotation=90)

plt.title('Top 10 Countries with Total Wounded')
plt.xlabel('Country')
plt.ylabel('Total Wounded')
plt.show()

pd.crosstab(df.Year, df.Region).plot(kind='area',stacked=False,figsize=(20,10))
plt.title('Terrorist Activities By Region In Each Year',fontsize=25)
plt.ylabel('Number of Attacks',fontsize=20)
plt.xlabel("Year",fontsize=20)
plt.show()

top_5_region = df['Region'].value_counts().reset_index().iloc[:5]

plt.figure(figsize=(10, 6))
sns.barplot(x='Region', y='count', data=top_5_region, palette='viridis')

plt.title('Top 5 regions in Terrorism')
plt.xticks(rotation=90)
plt.xlabel('Region')
plt.ylabel('Count')
plt.show()

top_5_attacktype = df['Attack_type'].value_counts().reset_index().iloc[:5]

plt.figure(figsize=(10, 6))
sns.barplot(x='Attack_type', y='count', data=top_5_attacktype, palette='Set1')
sns.set(style = 'darkgrid')

plt.title('Top 5 attack types in Terrorism')
plt.xticks(rotation=90)
plt.xlabel('Attack_type')
plt.ylabel('Count')

plt.show()

top_5_targettype = df['Target_type'].value_counts().reset_index().iloc[:5]

plt.figure(figsize=(8, 8))

colors = sns.color_palette("tab10", n_colors=len(top_5_targettype))
plt.pie(top_5_targettype['count'], labels=top_5_targettype['Target_type'], autopct='%1.1f%%', startangle=140, colors=colors)

plt.title('Top 5 Target types Used in Terrorism')
plt.axis('equal')
plt.show()

top_11_targetsubtype = df['Target_subtype'].value_counts().reset_index()
top_11_targetsubtype = top_11_targetsubtype[top_11_targetsubtype['Target_subtype'] != 'others']
top_11_targetsubtype = top_11_targetsubtype.iloc[:11]
top_11_targetsubtype

#taking away Unnamed civilian

top_10_targetsubtype = top_11_targetsubtype[top_11_targetsubtype['Target_subtype'] != 'Unnamed Civilian/Unspecified']
top_10_targetsubtype

plt.figure(figsize=(10, 6))
sns.barplot(x='Target_subtype', y='count', data=top_10_targetsubtype, palette='viridis')
sns.set(style = 'darkgrid')

plt.title('Top 10 Target subtypes in Terrorism')
plt.xticks(rotation=90)
plt.xlabel('Target_subtype')
plt.ylabel('Count')
plt.show()

top_6_gangname = df['Gang_name'].value_counts().reset_index().iloc[:6]
top_6_gangname

#lets remove unknown from the plot, since its not relevant

top_5_gangname =top_6_gangname[top_6_gangname['Gang_name'] != 'Unknown']
top_5_gangname

plt.figure(figsize=(10, 6))
sns.barplot(x='Gang_name', y='count', data=top_5_gangname, palette='coolwarm')

plt.title('Top 5 Gangs in Terrorism')
plt.xticks(rotation=90)
plt.xlabel('Gang_name')
plt.ylabel('Count')
plt.show()

top_6_weapontype = df['Weapon_type'].value_counts().reset_index().iloc[:6]
top_6_weapontype

top_5_weapontype = top_6_weapontype[top_6_weapontype['Weapon_type'] != 'Unknown']
top_5_weapontype

'''
plt.figure(figsize=(10, 6))
sns.barplot(x='Weapon_type', y='count', data=top_5_weapontype, palette='viridis')

plt.title('Top 5 Weapons used in Terrorism')
plt.xticks(rotation=90)

plt.xlabel('Weapon_type')
plt.ylabel('count')
plt.show()
'''

plt.figure(figsize=(8, 8))

colors = sns.color_palette("viridis", n_colors=len(top_5_weapontype))
plt.pie(top_5_weapontype['count'], labels=top_5_weapontype['Weapon_type'], autopct='%1.1f%%', startangle=140, colors=colors)

plt.title('Top 5 Weapons Used in Terrorism')

plt.axis('equal')
plt.show()

"""So there are 204 countries recorded as 1 record is for other countries."""

attacks_per_year = df['Year'].value_counts().sort_index()

plt.figure(figsize=(12,5))

sns.lineplot(x=attacks_per_year.index, y=attacks_per_year.values)

plt.xticks(rotation=90)
plt.title('Attacks by Year')
plt.show()

plt.figure(figsize=(12,5))
plt.xticks(rotation=90)
plt.title('Attacks by Year')
sns.countplot(x=df.Year)
sns.set(style = 'darkgrid')

top_10_years = df['Year'].value_counts().nlargest(10).index
top_5_months = df['Month'].value_counts().nlargest(5).index

filtered_df = df[df['Year'].isin(top_10_years) & df['Month'].isin(top_5_months)]
grouped_data = filtered_df.groupby(['Year', 'Month']).size().reset_index(name='Count')

pivot_data = grouped_data.pivot(index='Year', columns='Month', values='Count').fillna(0)

month_names = ['January', 'February', 'March', 'April', 'May', 'June',
               'July', 'August', 'September', 'October', 'November', 'December']

pivot_data.columns = [month_names[int(month) - 1] for month in pivot_data.columns]

plt.figure(figsize=(14, 7))
pivot_data.plot(kind='bar', stacked=True, colormap='viridis', ax=plt.gca())

plt.title('Stacked Bar Chart of Top 10 Years by Top 5 Months')
plt.xlabel('Year')
plt.ylabel('Number of Attacks')
plt.xticks(rotation=45)
plt.legend(title='Month', bbox_to_anchor=(1.05, 1), loc='upper left')

plt.tight_layout()  # Adjust layout to make room for the legend
plt.show()

top_10_countries = df['Country'].value_counts().nlargest(10).index

filtered_df = df[df['Country'].isin(top_10_countries)]
grouped_data = filtered_df.groupby(['Country', 'Attack_type']).size().reset_index(name='Count')

plt.figure(figsize=(14, 7))
sns.barplot(x='Country', y='Count', hue='Attack_type', data=grouped_data, palette='Set2')

plt.xticks(rotation=45)
plt.title('Number of Attacks by Country and Attack Type')
plt.xlabel('Country')
plt.ylabel('Number of Attacks')

plt.legend(title='Attack Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

highest_country = df['Country'].value_counts().idxmax()
highest_country_data = df[df['Country'] == highest_country]

highest_country_grouped = highest_country_data.groupby('Weapon_type').size().reset_index(name='Count')

plt.figure(figsize=(10, 6))
bar_plot = sns.barplot(x='Weapon_type', y='Count', data=highest_country_grouped, palette='Set2')

plt.title(f'Weapon Types Used in Attacks for {highest_country}')
plt.xlabel('Weapon Type')
plt.ylabel('Number of Attacks')

plt.xticks(rotation=45)

for p in bar_plot.patches:
    bar_plot.annotate(f'{p.get_height()}',
                      (p.get_x() + p.get_width() / 2., p.get_height()),
                      ha='center', va='bottom',
                      fontsize=10, color='black')

plt.tight_layout()
plt.show()


next_9_countries = df['Country'].value_counts().nlargest(10).index[1:]  # Exclude the first highest

filtered_df_next_9 = df[df['Country'].isin(next_9_countries)]

grouped_data_next_9 = filtered_df_next_9.groupby(['Country', 'Weapon_type']).size().reset_index(name='Count')

plt.figure(figsize=(14, 7))
sns.barplot(x='Country', y='Count', hue='Weapon_type', data=grouped_data_next_9, palette='Set2')

plt.xticks(rotation=45)
plt.title('Number of Attacks by Next 9 Countries and Weapon Type')
plt.xlabel('Country')
plt.ylabel('Number of Attacks')

plt.legend(title='Weapon Type', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()

top_5_targettype = df['Target_type'].value_counts().index[:5]

top_10_years = df['Year'].value_counts().index[:10]

new_df = df[df['Target_type'].isin(top_5_targettype) & df['Year'].isin(top_10_years)]

plt.figure(figsize=(14,7))

grouped_data = new_df.groupby(['Target_type', 'Year']).size().reset_index(name='Count')

sns.barplot(x='Target_type', y='Count', hue='Year', data=grouped_data, palette='coolwarm')

plt.xticks(rotation=90)
plt.title('Attack Counts by Target type and Year (Top 5 Target type & Top 10 Years)')
plt.show()

top_5_targetsubtype = df['Target_subtype'].value_counts().index[:5]

top_10_years = df['Year'].value_counts().index[:10]

new_df = df[df['Target_subtype'].isin(top_5_targetsubtype) & df['Year'].isin(top_10_years)]

plt.figure(figsize=(14,7))

grouped_data = new_df.groupby(['Target_subtype', 'Year']).size().reset_index(name='Count')

sns.barplot(x='Target_subtype', y='Count', hue='Year', data=grouped_data, palette = 'Set2')

plt.xticks(rotation=90)
plt.title('Attack Counts by Target subtype and Year (Top 5 Target subtype & Top 10 Years)')
plt.show()

top_5_attacktype = df['Attack_type'].value_counts().index[:5]

top_10_years = df['Year'].value_counts().index[:10]

new_df = df[df['Attack_type'].isin(top_5_attacktype) & df['Year'].isin(top_10_years)]

plt.figure(figsize=(14,7))

grouped_data = new_df.groupby(['Attack_type', 'Year']).size().reset_index(name='Count')

sns.barplot(x='Attack_type', y='Count', hue='Year', data=grouped_data, palette = 'Set3')

plt.xticks(rotation=90)
plt.title('Attack Counts by Attack type and Year (Top 5 Attack type & Top 10 Years)')
plt.show()

df.columns

v = df['Success'].value_counts()
fig = plt.gcf()
fig.set_size_inches((10,6))

cmap = plt.get_cmap('Set1')
color = cmap(np.arange(len(v)))
plt.pie(v, labels = ['Successed', 'failed'], autopct = '%0.02f', colors = color,
        labeldistance = 1.1, wedgeprops= dict(width = 0.6), shadow = True)
plt.title('Terrorist attack Successed or failed (1970-2017)', fontsize = (15))
plt.show()

india = df[df['Country'] == 'India']
india.head()

india['State'].value_counts().nlargest(10)

print('In India, high number of killed victims in one attack',india['Kill'].value_counts().nlargest(5))
print('In India, high number of wounded victims in one attack',india['Wound'].value_counts().nlargest(5))

plt.figure(figsize=(12,9))
plt.title('Year wise Indian Terrorism attacks')
plt.xticks(rotation=90)
sns.countplot(x=india.Year)
sns.set(style='darkgrid')

df_new = df[df['City'] != 'Unknown']
city_attacks_india = df_new['City'].value_counts().reset_index()

print(city_attacks_india)

city_attacks_india.columns = ['City', 'Total Attacks']

city_attacks_india.drop(1, inplace=True)

plt.subplots(figsize=(20,8))
sns.barplot(x='City', y='Total Attacks', data=city_attacks_india[1:15], palette='Set2', edgecolor=sns.color_palette('dark',10))

plt.xticks(rotation=90)
plt.title('Number Of Total Attacks in Each Indian City')
plt.show()

#since 0 is Unknown, starting from 1
sns.barplot(y = india['Gang_name'].value_counts()[1:6].values,x = india['Gang_name'].value_counts()[1:6].index,palette='Spectral')
plt.xticks(rotation=90)
fig=plt.gcf()
fig.set_size_inches(20,8)
plt.title('Terrorist Groups with Highest Terror Attacks in India')
plt.show()

"""#Conclusions

1. Total of killed persons in one terrorism act : 410657<br>
2. Total of wounded persons in one terrorism act : 523094<br>
3. Top 3 highly killed in one terrorism act: 97881, 36424, 14101<br>
4. Top 3 highly wounded in one terrorism act: 118808, 15988, 10207<br>
5. Top 3 countries with more casualties : Iraq, Afghanistan, Pakistan<br>
6. Mostly attacked region : Middle East & North Africa<br>
7. Mostly attacking type : Bombing / Explosion<br>
8. Mostly attacking Target type : Private citizens & property<br>
9. Mostly attacking Target subtype : Police security forces/officers<br>
10. Top 3 Gangs : Taliban, Islamic State of Iraq & Levant, Shining Path (SL)<br>
<br>
11. In India, Top 3 states with major attacks are Jammu and Kashmir, Assam and Manipur<br>
12. In India, Top 3 cities with major attacks are Lima, Mosul and Belfast.<br>
13. In India, Top 3 gangs with major attacks are Communists Party of India (CPI - Maoist), Maoist and Sikh Extremists.<br>
14. In India, high number of killed victims in one attack : 6611<br>
15. In India, high number of wounded victims in one attack : 8219<br>
"""